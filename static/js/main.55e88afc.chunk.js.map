{"version":3,"sources":["context/ThemeContext.js","api/stock-api.js","context/StockContext.js","components/SearchResults.js","components/Search.js","components/ThemeIcon.js","components/Header.js","components/Card.js","components/Details.js","components/Overview.js","components/ChartFilter.js","helpers/date-helper.js","constants/config.js","components/Chart.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","basePath","searchSymbol","_ref","_asyncToGenerator","_callee","query","url","response","message","_context","concat","process","fetch","ok","status","json","_x","apply","arguments","fetchStockDetails","_ref2","_callee2","stockSymbol","_context2","_x2","fetchQuote","_ref3","_callee3","_context3","_x3","fetchHistoricalData","_ref4","_callee4","resolution","from","to","_context4","_x4","_x5","_x6","_x7","StockContext","SearchResults","results","darkMode","useContext","setStockSymbol","createElement","className","map","item","symbol","onClick","description","Search","_useState","useState","_useState2","_slicedToArray","input","setInput","_useState3","_useState4","bestMatches","setBestMatches","updateBestMatches","searchResults","t0","console","log","placeholder","onChange","event","target","onKeyPress","XIcon","SearchIcon","ThemeIcon","_useContext","setDarkMode","MoonIcon","Header","Fragment","Card","children","Details","details","detailsList","country","currency","exchange","ipo","marketCapitalization","finnhubIndustry","toFixed","Overview","price","change","changePercent","ChartFilter","text","active","convertDateToUnixTimestamp","date","Math","floor","getTime","chartConfig","1D","days","weeks","months","years","1W","1M","1Y","Chart","filter","setFilter","data","setData","formatData","c","index","unixTimestamp","t","Date","toLocaleDateString","useEffect","getDateRange","_chartConfig$filter","endDate","startDate","newDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","createDate","startTimestampUnix","endTimestampUnix","_getDateRange","updateChartData","ResponsiveContainer","AreaChart","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Tooltip","contentStyle","backgroundColor","itemStyle","color","Area","dataKey","stroke","fill","fillOpacity","strokeWidth","XAxis","YAxis","domain","Dashboard","stockDetails","setStockDetails","quote","setQuote","updateStockDetails","updateStockOverview","pc","d","dp","App","Provider","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6QAIeA,EAFMC,IAAMC,6BCD3BC,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EADA,IAAM6I,EAAW,4BAEJC,EAAY,eAAAC,EAAAC,YAAAjJ,IAAA+G,KAAG,SAAAmC,EAAOC,GAAK,IAAAC,EAAAC,EAAAC,EAAA,OAAAtJ,IAAAyB,KAAA,SAAA8H,GAAA,cAAAA,EAAA3B,KAAA2B,EAAAjE,MAAA,OAC0C,OAA1E8D,EAAG,GAAAI,OAAMV,EAAQ,cAAAU,OAAaL,EAAK,WAAAK,OAAUC,4CAA6BF,EAAAjE,KAAA,EACzDoE,MAAMN,GAAI,OAAnB,IAARC,EAAQE,EAAA5E,MAEAgF,GAAE,CAAAJ,EAAAjE,KAAA,QAC0C,MAAlDgE,EAAO,yBAAAE,OAA4BH,EAASO,QAC5C,IAAItF,MAAMgF,GAAQ,cAAAC,EAAAjE,KAAA,EAGb+D,EAASQ,OAAM,cAAAN,EAAAzE,OAAA,SAAAyE,EAAA5E,MAAA,yBAAA4E,EAAAxB,SAAAmB,MAC7B,gBAVwBY,GAAA,OAAAd,EAAAe,MAAAjH,KAAAkH,YAAA,GAYZC,EAAiB,eAAAC,EAAAjB,YAAAjJ,IAAA+G,KAAG,SAAAoD,EAAOC,GAAW,IAAAhB,EAAAC,EAAAC,EAAA,OAAAtJ,IAAAyB,KAAA,SAAA4I,GAAA,cAAAA,EAAAzC,KAAAyC,EAAA/E,MAAA,OACkD,OAA7F8D,EAAG,GAAAI,OAAMV,EAAQ,2BAAAU,OAA0BY,EAAW,WAAAZ,OAAUC,4CAA6BY,EAAA/E,KAAA,EAC5EoE,MAAMN,GAAI,OAAnB,IAARC,EAAQgB,EAAA1F,MAEAgF,GAAE,CAAAU,EAAA/E,KAAA,QAC0C,MAAlDgE,EAAO,yBAAAE,OAA4BH,EAASO,QAC5C,IAAItF,MAAMgF,GAAQ,cAAAe,EAAA/E,KAAA,EAGb+D,EAASQ,OAAM,cAAAQ,EAAAvF,OAAA,SAAAuF,EAAA1F,MAAA,yBAAA0F,EAAAtC,SAAAoC,MAC7B,gBAV6BG,GAAA,OAAAJ,EAAAH,MAAAjH,KAAAkH,YAAA,GAYjBO,EAAU,eAAAC,EAAAvB,YAAAjJ,IAAA+G,KAAG,SAAA0D,EAAOL,GAAW,IAAAhB,EAAAC,EAAAC,EAAA,OAAAtJ,IAAAyB,KAAA,SAAAiJ,GAAA,cAAAA,EAAA9C,KAAA8C,EAAApF,MAAA,OACgD,OAApF8D,EAAG,GAAAI,OAAMV,EAAQ,kBAAAU,OAAiBY,EAAW,WAAAZ,OAAUC,4CAA6BiB,EAAApF,KAAA,EACnEoE,MAAMN,GAAI,OAAnB,IAARC,EAAQqB,EAAA/F,MAEAgF,GAAE,CAAAe,EAAApF,KAAA,QAC0C,MAAlDgE,EAAO,yBAAAE,OAA4BH,EAASO,QAC5C,IAAItF,MAAMgF,GAAQ,cAAAoB,EAAApF,KAAA,EAGb+D,EAASQ,OAAM,cAAAa,EAAA5F,OAAA,SAAA4F,EAAA/F,MAAA,yBAAA+F,EAAA3C,SAAA0C,MAC7B,gBAVsBE,GAAA,OAAAH,EAAAT,MAAAjH,KAAAkH,YAAA,GAYVY,EAAmB,eAAAC,EAAA5B,YAAAjJ,IAAA+G,KAAG,SAAA+D,EACjCV,EACAW,EACAC,EACAC,GAAE,IAAA7B,EAAAC,EAAAC,EAAA,OAAAtJ,IAAAyB,KAAA,SAAAyJ,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA5F,MAAA,OAE8I,OAA1I8D,EAAG,GAAAI,OAAMV,EAAQ,yBAAAU,OAAwBY,EAAW,gBAAAZ,OAAeuB,EAAU,UAAAvB,OAASwB,EAAI,QAAAxB,OAAOyB,EAAE,WAAAzB,OAAUC,4CAA6ByB,EAAA5F,KAAA,EACzHoE,MAAMN,GAAI,OAAnB,IAARC,EAAQ6B,EAAAvG,MAEAgF,GAAE,CAAAuB,EAAA5F,KAAA,QAC0C,MAAlDgE,EAAO,yBAAAE,OAA4BH,EAASO,QAC5C,IAAItF,MAAMgF,GAAQ,cAAA4B,EAAA5F,KAAA,EAGb+D,EAASQ,OAAM,cAAAqB,EAAApG,OAAA,SAAAoG,EAAAvG,MAAA,yBAAAuG,EAAAnD,SAAA+C,MAC7B,gBAf+BK,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAd,MAAAjH,KAAAkH,YAAA,GClCjBuB,EAFMzL,IAAMC,gBCiCZyL,EA/BO,SAAHxC,GAAoB,IAAdyC,EAAOzC,EAAPyC,QACfC,EAAaC,qBAAW9L,GAAxB6L,SAEAE,EAAmBD,qBAAWJ,GAA9BK,eAER,OACE9L,IAAA+L,cAAA,MACEC,UAAS,qEAAAtC,OACPkC,EACI,qEACA,iDAGLD,EAAQM,IAAI,SAACC,GACZ,OACElM,IAAA+L,cAAA,MACEpL,IAAKuL,EAAKC,OACVH,UAAS,uEAAAtC,OACPkC,EAAW,sBAAwB,wBAErCQ,QAAS,kBAAMN,EAAeI,EAAKC,UAEnCnM,IAAA+L,cAAA,YAAOG,EAAKC,QACZnM,IAAA+L,cAAA,YAAOG,EAAKG,+BC1BxBnM,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAKA,IA+DemM,EA/DA,WAAM,IACXV,EAAaC,qBAAW9L,GAAxB6L,SAAQW,EAEUC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAAAI,EAEgBL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAO5BG,EAAiB,eAAA/D,EAAAC,YAAAjJ,IAAA+G,KAAG,SAAAmC,IAAA,IAAA8D,EAAAhJ,EAAA,OAAAhE,IAAAyB,KAAA,SAAA8H,GAAA,cAAAA,EAAA3B,KAAA2B,EAAAjE,MAAA,UAAAiE,EAAA3B,KAAA,GAElB6E,EAAK,CAAAlD,EAAAjE,KAAA,eAAAiE,EAAAjE,KAAA,EACqByD,EAAa0D,GAAM,OAAzCO,EAAazD,EAAA5E,KACbX,EAASgJ,EAAchJ,OAC7B8I,EAAe9I,GAAQ,OAAAuF,EAAAjE,KAAA,gBAAAiE,EAAA3B,KAAA,EAAA2B,EAAA0D,GAAA1D,EAAA,SAGzBuD,EAAe,IACfI,QAAQC,IAAG5D,EAAA0D,IAAQ,yBAAA1D,EAAAxB,SAAAmB,EAAA,iBAEtB,kBAXsB,OAAAF,EAAAe,MAAAjH,KAAAkH,YAAA,GAavB,OACElK,IAAA+L,cAAA,OACEC,UAAS,iEAAAtC,OACPkC,EAAW,8BAAgC,gCAG7C5L,IAAA+L,cAAA,SACErJ,KAAK,OACL7B,MAAO8L,EACPX,UAAS,kDAAAtC,OACPkC,EAAW,cAAgB,MAE7B0B,YAAY,kBACZC,SAAU,SAACC,GAAK,OAAKZ,EAASY,EAAMC,OAAO5M,QAC3C6M,WAAY,SAACF,GACO,UAAdA,EAAM7M,KACRsM,OAILN,GACC3M,IAAA+L,cAAA,UAAQK,QAvCA,WACZQ,EAAS,IACTI,EAAe,KAqCahB,UAAU,OAChChM,IAAA+L,cAAC4B,IAAK,CAAC3B,UAAU,2BAGrBhM,IAAA+L,cAAA,UACEK,QAASa,EACTjB,UAAU,6EAEVhM,IAAA+L,cAAC6B,IAAU,CAAC5B,UAAU,2BAEvBW,GAASI,EAAYtG,OAAS,EAC7BzG,IAAA+L,cAACL,EAAa,CAACC,QAASoB,IACtB,gBCnCKc,EAzBG,WAAM,IAAAC,EACYjC,qBAAW9L,GAArC6L,EAAQkC,EAARlC,SAAUmC,EAAWD,EAAXC,YAMlB,OACE/N,IAAA+L,cAAA,UACEC,UAAS,qFAAAtC,OACPkC,EAAW,kBAAoB,MAEjCQ,QATmB,WACrB2B,GAAanC,KAUX5L,IAAA+L,cAACiC,IAAQ,CACPhC,UAAS,mCAAAtC,OACPkC,EACI,oCACA,oCCNCqC,EAZA,SAAH/E,GAAiB,IAAXlC,EAAIkC,EAAJlC,KAChB,OACEhH,IAAA+L,cAAA/L,IAAAkO,SAAA,KACElO,IAAA+L,cAAA,OAAKC,UAAU,YACbhM,IAAA+L,cAAA,MAAIC,UAAU,YAAYhF,GAC1BhH,IAAA+L,cAACO,EAAM,OAETtM,IAAA+L,cAAC8B,EAAS,QCKDM,EAbF,SAAHjF,GAAqB,IAAfkF,EAAQlF,EAARkF,SACNxC,EAAaC,qBAAW9L,GAAxB6L,SACR,OACE5L,IAAA+L,cAAA,OACEC,UAAS,kDAAAtC,OACPkC,EAAW,8BAAgC,gCAG5CwC,ICkCQC,EAzCC,SAAHnF,GAAoB,IAAdoF,EAAOpF,EAAPoF,QACT1C,EAAaC,qBAAW9L,GAAxB6L,SAEF2C,EAAc,CAClBvH,KAAM,OACNwH,QAAS,UACTC,SAAU,WACVC,SAAU,WACVC,IAAK,WACLC,qBAAsB,wBACtBC,gBAAiB,YAOnB,OACE7O,IAAA+L,cAACoC,EAAI,KACHnO,IAAA+L,cAAA,MACEC,UAAS,0DAAAtC,OACPkC,EAAW,kBAAoB,OAGhCvL,OAAOmH,KAAK+G,GAAatC,IAAI,SAACC,GAC7B,OACElM,IAAA+L,cAAA,MAAIpL,IAAKuL,EAAMF,UAAU,4CACvBhM,IAAA+L,cAAA,YAAOwC,EAAYrC,IACnBlM,IAAA+L,cAAA,QAAMC,UAAU,aACJ,yBAATE,EAA+B,GAAAxC,QACD4E,EAAQpC,GAhBlC,KAAM4C,QAAQ,GAgB0B,KACzCR,EAAQpC,UCPb6C,EAzBE,SAAH7F,GAA2D,IAArDiD,EAAMjD,EAANiD,OAAQ6C,EAAK9F,EAAL8F,MAAOC,EAAM/F,EAAN+F,OAAQC,EAAahG,EAAbgG,cAAeT,EAAQvF,EAARuF,SACxD,OACEzO,IAAA+L,cAACoC,EAAI,KACHnO,IAAA+L,cAAA,QAAMC,UAAU,0EACbG,GAEHnM,IAAA+L,cAAA,OAAKC,UAAU,kDACbhM,IAAA+L,cAAA,QAAMC,UAAU,uDAAsD,IAClEgD,EACFhP,IAAA+L,cAAA,QAAMC,UAAU,wDACbyC,IAGLzO,IAAA+L,cAAA,QACEC,UAAS,mCAAAtC,OACPuF,EAAS,EAAI,gBAAkB,iBAGhCA,EAAO,IAACjP,IAAA+L,cAAA,YAAM,IAAEmD,EAAc,UCJ1BC,EAfK,SAAHjG,GAAkC,IAA5BkG,EAAIlG,EAAJkG,KAAMC,EAAMnG,EAANmG,OAAQjD,EAAOlD,EAAPkD,QACnC,OACEpM,IAAA+L,cAAA,UACEK,QAASA,EACTJ,UAAS,oFAAAtC,OACP2F,EACI,gDACA,oCAAmC,6FAGxCD,0DCZME,EAA6B,SAACC,GACvC,OAAOC,KAAKC,MAAMF,EAAKG,UAAY,MCD1BC,EAAc,CACvBC,KAAM,CAAE3E,WAAY,IAAK4E,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,GAC9DC,KAAM,CAAEhF,WAAY,KAAM4E,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,GAC/DE,KAAM,CAAEjF,WAAY,KAAM4E,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,GAC/DG,KAAM,CAAElF,WAAY,IAAK4E,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,iBCHlE9P,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAoBA,IAqGeiQ,EArGD,WAAM,IAAA7D,EACUC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnC8D,EAAM5D,EAAA,GAAE6D,EAAS7D,EAAA,GAEhBb,EAAaC,qBAAW9L,GAAxB6L,SAEAtB,EAAgBuB,qBAAWJ,GAA3BnB,YAAWuC,EAEKL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7B0D,EAAIzD,EAAA,GAAE0D,EAAO1D,EAAA,GAEd2D,EAAa,SAACF,GAClB,OAAOA,EAAKG,EAAEzE,IAAI,SAACC,EAAMyE,GACvB,MAAO,CACL9P,MAAOqL,EAAK4C,QAAQ,GACpBS,MF9BqCqB,EE8BJL,EAAKM,EAAEF,GF5BrC,IAAIG,KAD0B,IAAhBF,GACSG,uBAFU,IAACH,KEmE3C,OAhCAI,oBAAU,WACR,IAAMC,EAAe,WAAM,IAAAC,EACcvB,EAAYU,GAA3CR,EAAIqB,EAAJrB,KAAMC,EAAKoB,EAALpB,MAAOC,EAAMmB,EAANnB,OAAQC,EAAKkB,EAALlB,MAEvBmB,EAAU,IAAIL,KACdM,EFnCgB,SAAC7B,EAAMM,EAAMC,EAAOC,EAAQC,GACpD,IAAIqB,EAAU,IAAIP,KAAKvB,GAIvB,OAHA8B,EAAQC,QAAQD,EAAQE,UAAY1B,EAAO,EAAIC,GAC/CuB,EAAQG,SAASH,EAAQI,WAAa1B,GACtCsB,EAAQK,YAAYL,EAAQM,cAAgB3B,GACrCqB,EE8BaO,CAAWT,GAAUtB,GAAOC,GAAQC,GAASC,GAI/D,MAAO,CAAE6B,mBAFkBvC,EAA2B8B,GAEzBU,iBADJxC,EAA2B6B,MAIjC,eAAAjI,EAAAC,YAAAjJ,IAAA+G,KAAG,SAAAmC,IAAA,IAAA2I,EAAAF,EAAAC,EAAA7G,EAAA/G,EAAA,OAAAhE,IAAAyB,KAAA,SAAA8H,GAAA,cAAAA,EAAA3B,KAAA2B,EAAAjE,MAAA,OAG6B,OAH7BiE,EAAA3B,KAAA,EAAAiK,EAE6Bd,IAAzCY,EAAkBE,EAAlBF,mBAAoBC,EAAgBC,EAAhBD,iBACtB7G,EAAa0E,EAAYU,GAAQpF,WAAUxB,EAAAjE,KAAA,EAC5BsF,EACnBR,EACAW,EACA4G,EACAC,GACD,OALK5N,EAAMuF,EAAA5E,KAMZ2L,EAAQC,EAAWvM,IAASuF,EAAAjE,KAAA,gBAAAiE,EAAA3B,KAAA,EAAA2B,EAAA0D,GAAA1D,EAAA,SAE5B+G,EAAQ,IACRpD,QAAQC,IAAG5D,EAAA0D,IAAQ,yBAAA1D,EAAAxB,SAAAmB,EAAA,iBAEtB,kBAfoB,OAAAF,EAAAe,MAAAjH,KAAAkH,YAAA,EAiBrB8H,IACC,CAAC1H,EAAa+F,IAGfrQ,IAAA+L,cAACoC,EAAI,KACHnO,IAAA+L,cAAA,MAAIC,UAAU,oCACX3L,OAAOmH,KAAKmI,GAAa1D,IAAI,SAACC,GAAI,OACjClM,IAAA+L,cAAA,MAAIpL,IAAKuL,GACPlM,IAAA+L,cAACoD,EAAW,CACVC,KAAMlD,EACNmD,OAAQgB,IAAWnE,EACnBE,QAAS,WACPkE,EAAUpE,UAMpBlM,IAAA+L,cAACkG,IAAmB,KAClBjS,IAAA+L,cAACmG,IAAS,CAAC3B,KAAMA,GACfvQ,IAAA+L,cAAA,YACE/L,IAAA+L,cAAA,kBAAgBoG,GAAG,aAAaC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtDvS,IAAA+L,cAAA,QACEyG,OAAO,KACPC,UAAW7G,EAAW,UAAY,mBAClC8G,YAAa,KAEf1S,IAAA+L,cAAA,QACEyG,OAAO,MACPC,UAAW7G,EAAW,UAAY,mBAClC8G,YAAa,MAInB1S,IAAA+L,cAAC4G,IAAO,CACNC,aAAchH,EAAW,CAAEiH,gBAAiB,WAAc,KAC1DC,UAAWlH,EAAW,CAAEmH,MAAO,WAAc,OAE/C/S,IAAA+L,cAACiH,IAAI,CACHtQ,KAAK,WACLuQ,QAAQ,QACRC,OAAO,UACPC,KAAK,mBACLC,YAAa,EACbC,YAAa,KAEfrT,IAAA+L,cAACuH,IAAK,CAACL,QAAQ,SACfjT,IAAA+L,cAACwH,IAAK,CAACC,OAAQ,CAAC,UAAW,8BClHrCtT,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAQA,IA6DesT,EA7DG,WAAM,IACd7H,EAAaC,qBAAW9L,GAAxB6L,SAEAtB,EAAgBuB,qBAAWJ,GAA3BnB,YAAWiC,EAEqBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CmH,EAAYjH,EAAA,GAAEkH,EAAelH,EAAA,GAAAI,EAEVL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/B+G,EAAK9G,EAAA,GAAE+G,EAAQ/G,EAAA,GA0BtB,OAxBAkE,oBAAU,WACR,IAAM8C,EAAkB,eAAA5K,EAAAC,YAAAjJ,IAAA+G,KAAG,SAAAmC,IAAA,IAAAlF,EAAA,OAAAhE,IAAAyB,KAAA,SAAA8H,GAAA,cAAAA,EAAA3B,KAAA2B,EAAAjE,MAAA,cAAAiE,EAAA3B,KAAA,EAAA2B,EAAAjE,KAAA,EAEF2E,EAAkBG,GAAY,OAA7CpG,EAAMuF,EAAA5E,KACZ8O,EAAgBzP,GAAQuF,EAAAjE,KAAA,gBAAAiE,EAAA3B,KAAA,EAAA2B,EAAA0D,GAAA1D,EAAA,SAExBkK,EAAgB,IAChBvG,QAAQC,IAAG5D,EAAA0D,IAAQ,yBAAA1D,EAAAxB,SAAAmB,EAAA,iBAEtB,kBARuB,OAAAF,EAAAe,MAAAjH,KAAAkH,YAAA,GAUlB6J,EAAmB,eAAA3J,EAAAjB,YAAAjJ,IAAA+G,KAAG,SAAAoD,IAAA,IAAAnG,EAAA,OAAAhE,IAAAyB,KAAA,SAAA4I,GAAA,cAAAA,EAAAzC,KAAAyC,EAAA/E,MAAA,cAAA+E,EAAAzC,KAAA,EAAAyC,EAAA/E,KAAA,EAEHiF,EAAWH,GAAY,OAAtCpG,EAAMqG,EAAA1F,KACZgP,EAAS3P,GAAQqG,EAAA/E,KAAA,gBAAA+E,EAAAzC,KAAA,EAAAyC,EAAA4C,GAAA5C,EAAA,SAEjBsJ,EAAS,IACTzG,QAAQC,IAAG9C,EAAA4C,IAAQ,yBAAA5C,EAAAtC,SAAAoC,EAAA,iBAEtB,kBARwB,OAAAD,EAAAH,MAAAjH,KAAAkH,YAAA,GAUzB4J,IACAC,KACC,CAACzJ,IAEFtK,IAAA+L,cAAA,OACEC,UAAS,4IAAAtC,OACPkC,EAAW,4BAA8B,mBAG3C5L,IAAA+L,cAAA,OAAKC,UAAU,qFACbhM,IAAA+L,cAACkC,EAAM,CAACjH,KAAM0M,EAAa1M,QAE7BhH,IAAA+L,cAAA,OAAKC,UAAU,4BACbhM,IAAA+L,cAACqE,EAAK,OAERpQ,IAAA+L,cAAA,WACE/L,IAAA+L,cAACgD,EAAQ,CACP5C,OAAQ7B,EACR0E,MAAO4E,EAAMI,GACb/E,OAAQ2E,EAAMK,EACd/E,cAAe0E,EAAMM,GACrBzF,SAAUiF,EAAajF,YAG3BzO,IAAA+L,cAAA,OAAKC,UAAU,4BACbhM,IAAA+L,cAACsC,EAAO,CAACC,QAASoF,OC7CXS,MAbf,WAAe,IAAA5H,EACmBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxCX,EAAQa,EAAA,GAAEsB,EAAWtB,EAAA,GAAAI,EACUL,mBAAS,QAAOM,EAAAJ,YAAAG,EAAA,GAA/CvC,EAAWwC,EAAA,GAAEhB,EAAcgB,EAAA,GAElC,OACE9M,IAAA+L,cAAChM,EAAaqU,SAAQ,CAACvT,MAAO,CAAE+K,WAAUmC,gBACxC/N,IAAA+L,cAACN,EAAa2I,SAAQ,CAACvT,MAAO,CAAEyJ,cAAawB,mBAC3C9L,IAAA+L,cAAC0H,EAAS,SCDHY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAArQ,KAAAoQ,EAAAE,KAAA,WAAqBtQ,KAAK,SAAA8E,GAAiD,IAA9CyL,EAAMzL,EAANyL,OAAQC,EAAM1L,EAAN0L,OAAQC,EAAM3L,EAAN2L,OAAQC,EAAM5L,EAAN4L,OAAQC,EAAO7L,EAAP6L,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpV,IAAA+L,cAAC/L,IAAMqV,WAAU,KACfrV,IAAA+L,cAACoI,EAAG,QAORE","file":"static/js/main.55e88afc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ThemeContext = React.createContext();\r\n\r\nexport default ThemeContext;","const basePath = \"https://finnhub.io/api/v1\";\r\n\r\nexport const searchSymbol = async (query) => {\r\n  const url = `${basePath}/search?q=${query}&token=${process.env.REACT_APP_API_KEY}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    const message = `An error has occured: ${response.status}`;\r\n    throw new Error(message);\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const fetchStockDetails = async (stockSymbol) => {\r\n  const url = `${basePath}/stock/profile2?symbol=${stockSymbol}&token=${process.env.REACT_APP_API_KEY}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    const message = `An error has occured: ${response.status}`;\r\n    throw new Error(message);\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const fetchQuote = async (stockSymbol) => {\r\n  const url = `${basePath}/quote?symbol=${stockSymbol}&token=${process.env.REACT_APP_API_KEY}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    const message = `An error has occured: ${response.status}`;\r\n    throw new Error(message);\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const fetchHistoricalData = async (\r\n  stockSymbol,\r\n  resolution,\r\n  from,\r\n  to\r\n) => {\r\n  const url = `${basePath}/stock/candle?symbol=${stockSymbol}&resolution=${resolution}&from=${from}&to=${to}&token=${process.env.REACT_APP_API_KEY}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    const message = `An error has occured: ${response.status}`;\r\n    throw new Error(message);\r\n  }\r\n\r\n  return await response.json();\r\n};","import React from \"react\";\r\n\r\nconst StockContext = React.createContext();\r\n\r\nexport default StockContext;","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport StockContext from \"../context/StockContext\";\r\n\r\nconst SearchResults = ({ results }) => {\r\n  const { darkMode } = useContext(ThemeContext);\r\n\r\n  const { setStockSymbol } = useContext(StockContext);\r\n\r\n  return (\r\n    <ul\r\n      className={`absolute top-12 border-2 w-full rounded-md h-64 overflow-y-scroll ${\r\n        darkMode\r\n          ? \"bg-gray-900 border-gray-800 custom-scrollbar custom-scrollbar-dark\"\r\n          : \"bg-white border-neutral-200 custom-scrollbar\"\r\n      }`}\r\n    >\r\n      {results.map((item) => {\r\n        return (\r\n          <li\r\n            key={item.symbol}\r\n            className={`cursor-pointer p-4 m-2 flex items-center justify-between rounded-md ${\r\n              darkMode ? \"hover:bg-indigo-600\" : \"hover:bg-indigo-200 \"\r\n            }`}\r\n            onClick={() => setStockSymbol(item.symbol)}\r\n          >\r\n            <span>{item.symbol}</span>\r\n            <span>{item.description}</span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SearchResults;","import { XIcon, SearchIcon } from \"@heroicons/react/solid\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport { searchSymbol } from \"../api/stock-api\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nconst Search = () => {\r\n  const { darkMode } = useContext(ThemeContext);\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const [bestMatches, setBestMatches] = useState([]);\r\n\r\n  const clear = () => {\r\n    setInput(\"\");\r\n    setBestMatches([]);\r\n  };\r\n\r\n  const updateBestMatches = async () => {\r\n    try {\r\n      if (input) {\r\n        const searchResults = await searchSymbol(input);\r\n        const result = searchResults.result;\r\n        setBestMatches(result);\r\n      }\r\n    } catch (error) {\r\n      setBestMatches([]);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`flex items-center my-4 border-2 rounded-md relative z-50 w-96 ${\r\n        darkMode ? \"bg-gray-900 border-gray-800\" : \"bg-white border-neutral-200\"\r\n      }`}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        className={`w-full px-4 py-2 focus:outline-none rounded-md ${\r\n          darkMode ? \"bg-gray-900\" : null\r\n        }`}\r\n        placeholder=\"Search stock...\"\r\n        onChange={(event) => setInput(event.target.value)}\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            updateBestMatches();\r\n          }\r\n        }}\r\n      />\r\n      {input && (\r\n        <button onClick={clear} className=\"m-1\">\r\n          <XIcon className=\"h-4 w-4 fill-gray-500\" />\r\n        </button>\r\n      )}\r\n      <button\r\n        onClick={updateBestMatches}\r\n        className=\"h-8 w-8 bg-indigo-600 rounded-md flex justify-center items-center m-1 p-2\"\r\n      >\r\n        <SearchIcon className=\"h-4 w-4 fill-gray-100\" />\r\n      </button>\r\n      {input && bestMatches.length > 0 ? (\r\n        <SearchResults results={bestMatches} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","import React, { useContext } from \"react\";\r\nimport { MoonIcon } from \"@heroicons/react/solid\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nconst ThemeIcon = () => {\r\n  const { darkMode, setDarkMode } = useContext(ThemeContext);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`rounded-lg border-1 border-neutral-400 p-2 absolute right-8 xl:right-32 shadow-lg ${\r\n        darkMode ? \"shadow-gray-800\" : null\r\n      }`}\r\n      onClick={toggleDarkMode}\r\n    >\r\n      <MoonIcon\r\n        className={`h-8 w-8 cursor-pointer stroke-1 ${\r\n          darkMode\r\n            ? \"fill-yellow-400 stroke-yellow-400\"\r\n            : \"fill-none stroke-neutral-400\"\r\n        }`}\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeIcon;","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport ThemeIcon from \"./ThemeIcon\";\r\n\r\nconst Header = ({ name }) => {\r\n  return (\r\n    <>\r\n      <div className=\"xl:px-32\">\r\n        <h1 className=\"text-5xl\">{name}</h1>\r\n        <Search />\r\n      </div>\r\n      <ThemeIcon />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nconst Card = ({ children }) => {\r\n  const { darkMode } = useContext(ThemeContext);\r\n  return (\r\n    <div\r\n      className={`w-full h-full rounded-md relative p-8 border-2 ${\r\n        darkMode ? \"bg-gray-900 border-gray-800\" : \"bg-white border-neutral-200\"\r\n      }`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport Card from \"./Card\";\r\n\r\nconst Details = ({ details }) => {\r\n  const { darkMode } = useContext(ThemeContext);\r\n\r\n  const detailsList = {\r\n    name: \"Name\",\r\n    country: \"Country\",\r\n    currency: \"Currency\",\r\n    exchange: \"Exchange\",\r\n    ipo: \"IPO Date\",\r\n    marketCapitalization: \"Market Capitalization\",\r\n    finnhubIndustry: \"Industry\",\r\n  };\r\n\r\n  const convertMillionToBillion = (number) => {\r\n    return (number / 1000).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <ul\r\n        className={`w-full h-full flex flex-col justify-between divide-y-1 ${\r\n          darkMode ? \"divide-gray-800\" : null\r\n        }`}\r\n      >\r\n        {Object.keys(detailsList).map((item) => {\r\n          return (\r\n            <li key={item} className=\"flex-1 flex justify-between items-center\">\r\n              <span>{detailsList[item]}</span>\r\n              <span className=\"font-bold\">\r\n                {item === \"marketCapitalization\"\r\n                  ? `${convertMillionToBillion(details[item])}B`\r\n                  : details[item]}\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Overview = ({ symbol, price, change, changePercent, currency }) => {\r\n  return (\r\n    <Card>\r\n      <span className=\"absolute left-4 top-4 text-neutral-400 text-lg xl:text-xl 2xl:text-2xl\">\r\n        {symbol}\r\n      </span>\r\n      <div className=\"w-full h-full flex items-center justify-around\">\r\n        <span className=\"text-2xl xl:text-4xl 2xl:text-5xl flex items-center\">\r\n          ${price}\r\n          <span className=\"text-lg xl:text-xl 2xl:text-2xl text-neutral-400 m-2\">\r\n            {currency}\r\n          </span>\r\n        </span>\r\n        <span\r\n          className={`text-lg xl:text-xl 2xl:text-2xl ${\r\n            change > 0 ? \"text-lime-500\" : \"text-red-500\"\r\n          }`}\r\n        >\r\n          {change} <span>({changePercent}%)</span>\r\n        </span>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Overview;","import React from \"react\";\r\n\r\nconst ChartFilter = ({ text, active, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`w-12 m-2 h-8 border-1 rounded-md flex items-center justify-center cursor-pointer ${\r\n        active\r\n          ? \"bg-indigo-600 border-indigo-700 text-gray-100\"\r\n          : \"border-indigo-300 text-indigo-300\"\r\n      } transition duration-200 hover:bg-indigo-600 hover:text-gray-100 hover:border-indigo-700`}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChartFilter;","export const convertDateToUnixTimestamp = (date) => {\r\n    return Math.floor(date.getTime() / 1000);\r\n  };\r\n  \r\n  export const convertUnixTimestampToDate = (unixTimestamp) => {\r\n    const milliseconds = unixTimestamp * 1000;\r\n    return new Date(milliseconds).toLocaleDateString();\r\n  };\r\n  \r\n  export const createDate = (date, days, weeks, months, years) => {\r\n    let newDate = new Date(date);\r\n    newDate.setDate(newDate.getDate() + days + 7 * weeks);\r\n    newDate.setMonth(newDate.getMonth() + months);\r\n    newDate.setFullYear(newDate.getFullYear() + years);\r\n    return newDate;\r\n  };","export const chartConfig = {\r\n    \"1D\": { resolution: \"1\", days: 1, weeks: 0, months: 0, years: 0 },\r\n    \"1W\": { resolution: \"15\", days: 0, weeks: 1, months: 0, years: 0 },\r\n    \"1M\": { resolution: \"60\", days: 0, weeks: 0, months: 1, years: 0 },\r\n    \"1Y\": { resolution: \"D\", days: 0, weeks: 0, months: 0, years: 1 },\r\n  };","import React, { useContext, useEffect, useState } from \"react\";\r\nimport ChartFilter from \"./ChartFilter\";\r\nimport Card from \"./Card\";\r\nimport {\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Tooltip,\r\n} from \"recharts\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport StockContext from \"../context/StockContext\";\r\nimport { fetchHistoricalData } from \"../api/stock-api\";\r\nimport {\r\n  createDate,\r\n  convertDateToUnixTimestamp,\r\n  convertUnixTimestampToDate,\r\n} from \"../helpers/date-helper\";\r\nimport { chartConfig } from \"../constants/config\";\r\n\r\nconst Chart = () => {\r\n  const [filter, setFilter] = useState(\"1W\");\r\n\r\n  const { darkMode } = useContext(ThemeContext);\r\n\r\n  const { stockSymbol } = useContext(StockContext);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const formatData = (data) => {\r\n    return data.c.map((item, index) => {\r\n      return {\r\n        value: item.toFixed(2),\r\n        date: convertUnixTimestampToDate(data.t[index]),\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getDateRange = () => {\r\n      const { days, weeks, months, years } = chartConfig[filter];\r\n\r\n      const endDate = new Date();\r\n      const startDate = createDate(endDate, -days, -weeks, -months, -years);\r\n\r\n      const startTimestampUnix = convertDateToUnixTimestamp(startDate);\r\n      const endTimestampUnix = convertDateToUnixTimestamp(endDate);\r\n      return { startTimestampUnix, endTimestampUnix };\r\n    };\r\n\r\n    const updateChartData = async () => {\r\n      try {\r\n        const { startTimestampUnix, endTimestampUnix } = getDateRange();\r\n        const resolution = chartConfig[filter].resolution;\r\n        const result = await fetchHistoricalData(\r\n          stockSymbol,\r\n          resolution,\r\n          startTimestampUnix,\r\n          endTimestampUnix\r\n        );\r\n        setData(formatData(result));\r\n      } catch (error) {\r\n        setData([]);\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    updateChartData();\r\n  }, [stockSymbol, filter]);\r\n\r\n  return (\r\n    <Card>\r\n      <ul className=\"flex absolute top-2 right-2 z-40\">\r\n        {Object.keys(chartConfig).map((item) => (\r\n          <li key={item}>\r\n            <ChartFilter\r\n              text={item}\r\n              active={filter === item}\r\n              onClick={() => {\r\n                setFilter(item);\r\n              }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ResponsiveContainer>\r\n        <AreaChart data={data}>\r\n          <defs>\r\n            <linearGradient id=\"chartColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop\r\n                offset=\"5%\"\r\n                stopColor={darkMode ? \"#312e81\" : \"rgb(199 210 254)\"}\r\n                stopOpacity={0.8}\r\n              />\r\n              <stop\r\n                offset=\"95%\"\r\n                stopColor={darkMode ? \"#312e81\" : \"rgb(199 210 254)\"}\r\n                stopOpacity={0}\r\n              />\r\n            </linearGradient>\r\n          </defs>\r\n          <Tooltip\r\n            contentStyle={darkMode ? { backgroundColor: \"#111827\" } : null}\r\n            itemStyle={darkMode ? { color: \"#818cf8\" } : null}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"value\"\r\n            stroke=\"#312e81\"\r\n            fill=\"url(#chartColor)\"\r\n            fillOpacity={1}\r\n            strokeWidth={0.5}\r\n          />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis domain={[\"dataMin\", \"dataMax\"]} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Details from \"./Details\";\r\nimport Overview from \"./Overview\";\r\nimport Chart from \"./Chart\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport StockContext from \"../context/StockContext\";\r\nimport { fetchStockDetails, fetchQuote } from \"../api/stock-api\";\r\n\r\nconst Dashboard = () => {\r\n  const { darkMode } = useContext(ThemeContext);\r\n\r\n  const { stockSymbol } = useContext(StockContext);\r\n\r\n  const [stockDetails, setStockDetails] = useState({});\r\n\r\n  const [quote, setQuote] = useState({});\r\n\r\n  useEffect(() => {\r\n    const updateStockDetails = async () => {\r\n      try {\r\n        const result = await fetchStockDetails(stockSymbol);\r\n        setStockDetails(result);\r\n      } catch (error) {\r\n        setStockDetails({});\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const updateStockOverview = async () => {\r\n      try {\r\n        const result = await fetchQuote(stockSymbol);\r\n        setQuote(result);\r\n      } catch (error) {\r\n        setQuote({});\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    updateStockDetails();\r\n    updateStockOverview();\r\n  }, [stockSymbol]);\r\n  return (\r\n    <div\r\n      className={`h-screen grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 grid-rows-8 md:grid-rows-7 xl:grid-rows-5 auto-rows-fr gap-6 p-10 font-quicksand ${\r\n        darkMode ? \"bg-gray-900 text-gray-300\" : \"bg-neutral-100\"\r\n      }`}\r\n    >\r\n      <div className=\"col-span-1 md:col-span-2 xl:col-span-3 row-span-1 flex justify-start items-center\">\r\n        <Header name={stockDetails.name} />\r\n      </div>\r\n      <div className=\"md:col-span-2 row-span-4\">\r\n        <Chart />\r\n      </div>\r\n      <div>\r\n        <Overview\r\n          symbol={stockSymbol}\r\n          price={quote.pc}\r\n          change={quote.d}\r\n          changePercent={quote.dp}\r\n          currency={stockDetails.currency}\r\n        />\r\n      </div>\r\n      <div className=\"row-span-2 xl:row-span-3\">\r\n        <Details details={stockDetails} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport StockContext from \"./context/StockContext\";\nimport ThemeContext from \"./context/ThemeContext\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [stockSymbol, setStockSymbol] = useState(\"MSFT\");\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, setDarkMode }}>\n      <StockContext.Provider value={{ stockSymbol, setStockSymbol }}>\n        <Dashboard />\n      </StockContext.Provider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}